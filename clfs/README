



BUG:
	ctype_base.h




TODO:
	1) после первого force удалять все флаги завершения последующих подшагов
	2) выполнение одного конкретного этапа или подэтапа
	3) выполнение диапазона этапов или подэтапов
	7) проверять закачку хешем а не файлом-флагом если это архив
	8) нормальное определение факта ошибки, сейчас всё время "successfully finished"
	9) make опции, например -j5



conifg.sh - файл настроек используемый в скриптах и содержащий все глобальные настройки
в нём есть список этапов
каждый этап это например gcc-static или linux_kernel
скрипт выполняющий сборку этапа находится в отдельном файле и все такие файлы лежат в одном каталоге steps

первым делом сборщик проверяет наличие скриптов для всех перечисленных этапов
потом вызывает у каждого script_name.sh get_substep_list
и получает список его под-этапов, например: download,unpack,patch,configure,make,install,merge
и затем выполняет их последовательно
каждый подэтап - это функция в скрипте этапа

TODO: дерево этапов вроде toolchain, kernel, bootloader, rootfs, initramfs, ...

в конце каждого скрипта этапа включается скрипт step_helper.sh в котором реализован механизм вызова функций если они определны в файле

скрипт этапа распаковывает исходники в отдельный каталог в директории сборки
компилит, устанавливает во временную директорию, а потом копирует определённые файлы или целые подкаталоги в определённый каталог
в toolchain, sysroot, и/или rootfs
или же выполняет другие действия если этот этап - не сборка пакета, а например создание файлов конфигурации и дерева каталогов

TODO: возможность переключаться между скачиванием исходников и использованию уже скачаных (например через git) и ограничиться очисткой
(make clean, make distclean, make mrproper, а лучше всего - git clean -fdx)

TODO: из одного пакета исходников собирать несколько пакетов для инсталляции
	например gcc_static и gcc_final, kernel_headers и linux_kernel


TODO: create diagram with all sources and sinks and full path
	исходники - это пакеты типа gcc-version.tar.gz
	destination - это то что перечислено вверху
	куски результатов компиляции с описанием что именно туда пошло
	этапы компиляцияя и стрелки указывающие каким компилятором скомпилено
	стрелки указывающие из чего скомпилено и куда установлен результат

target_rootfs - depends only on target, installed on target
sysroot	  - depends only on target, installed on host
toolchain - depends on host (execute on it) and target (compile for it), installed on host

Toolchain will be executed on the same machine as it was built on.

		target_rootfs		sysroot		toolchain	temporary
binutils						+
gcc stage1								+
linux headers				+
glibc		shared objects		headers		tools
					static libs
gcc stage2	libgcc.so				+






